<?php

namespace EPFProjets\ProfileBundle\Repository;
use EPFProjets\ProfileBundle\Entity\Profile;

/**
 * JuLikeRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class JuLikeRepository extends \Doctrine\ORM\EntityRepository
{
  public function getWasLiked($idUserProfile, $idLiked){

    $qb = $this -> createQueryBuilder('a')
                -> where('a.idLiker = :idliked')
                -> setParameter('idliked', $idLiked)
                -> andwhere('a.idLiked = :idUserProfile')
                -> setParameter('idUserProfile', $idUserProfile)
                -> setMaxResults( 1 );

    return $qb
    ->getQuery()
    ->getResult()
    ;



  }

  public function getHasLiked($idProfileUser, $idProfile){
    $idProfileUser = (int)$idProfileUser;
    if($idProfileUser == $idProfile){
      return 4;
    }

    $qb = $this -> createQueryBuilder('a')
                -> where('a.idLiker = :idProfileUser')
                -> setParameter('idProfileUser', $idProfileUser)
                -> andwhere('a.idLiked = :idProfile')
                -> setParameter('idProfile', $idProfile)
                -> setMaxResults( 1 );

    if($qb->getQuery()->getResult() != null){
      return 2;
    }
    $qb = $this -> createQueryBuilder('a')
                -> where('a.idLiker = :idProfile')
                -> setParameter('idProfile', $idProfile)
                -> andwhere('a.idLiked = :idProfileUser')
                -> setParameter('idProfileUser', $idProfileUser)
                -> andwhere('a.mutual = true')
                -> setMaxResults( 1 );

    if($qb->getQuery()->getResult() != null){
      return 3;
    }
    return 1;
  }

}
